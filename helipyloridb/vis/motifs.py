import matplotlib as mpl
from matplotlib.text import TextPath
from matplotlib.patches import PathPatch
from matplotlib.font_manager import FontProperties

import matplotlib.pyplot as plt

fp = FontProperties(family="Arial", weight="bold")
globscale = 1.35
LETTERS = { "T" : TextPath((-0.305, 0), "T", size=1, prop=fp),
            "G" : TextPath((-0.384, 0), "G", size=1, prop=fp),
            "A" : TextPath((-0.35, 0), "A", size=1, prop=fp),
            "C" : TextPath((-0.366, 0), "C", size=1, prop=fp) }
COLOR_SCHEME = {'G': 'orange',
                'A': 'red',
                'C': 'blue',
                'T': 'darkgreen'}

ALL_SCORES2 = [[('A', 0.01653482213365913),
          ('G', 0.026710097292833978),
          ('C', 0.035613463057111966),
          ('T', 0.057235922770358522)],
         [('C', 0.020055669245080433),
          ('G', 0.023816107228533015),
          ('A', 0.031336983195438178),
          ('T', 0.058913528407423782)],
         [('T', 0.018666958185377256),
          ('G', 0.084001311834197651),
          ('A', 0.093334790926886277),
          ('C', 0.30333807051238043)],
         [('C', 0.0),
          ('G', 0.0),
          ('A', 0.32027512306044359),
          ('T', 0.82203948252180525)],
         [('C', 0.012698627658037786),
          ('A', 0.053334236163758708),
          ('T', 0.096509570201087178),
          ('G', 0.10920819785912497)],
         [('C', 0.0),
          ('G', 0.089472611853783468),
          ('A', 0.1930724782107959),
          ('T', 0.22132698721725386)],
         [('C', 0.020962390607965918),
          ('A', 0.026202988259957396),
          ('G', 0.066380903591892068),
          ('T', 0.07336836712788071)],
         [('G', 0.0),
          ('A', 0.10236420974570831),
          ('C', 0.15354631461856247),
          ('T', 0.29173799777526871)],
         [('G', 0.027681850851852024),
          ('C', 0.089966015268519078),
          ('A', 0.089966015268519078),
          ('T', 0.53287562889815143)],
         [('A', 0.034165612000664765),
          ('C', 0.06833122400132953),
          ('G', 0.072601925501412631),
          ('T', 0.28186629900548432)],
         [('G', 0.0),
          ('A', 0.037325935579058833),
          ('C', 0.23328709736911771),
          ('T', 0.72785574379164719)],
         [('A', 0.017470244196759552),
          ('C', 0.062892879108334396),
          ('G', 0.094339318662501587),
          ('T', 0.19916078384305891)],
         [('G', 0.0),
          ('A', 0.096447131567581681),
          ('C', 0.15844885900388422),
          ('T', 0.48223565783790845)],
         [('G', 0.0),
          ('A', 0.069291952024925829),
          ('C', 0.20787585607477749),
          ('T', 0.46425607856700307)],
         [('G', 0.0),
          ('A', 0.0),
          ('C', 0.21713201856318373),
          ('T', 1.1495224512168551)],
         [('G', 0.0),
          ('A', 0.048934292002649343),
          ('T', 0.27263391258618919),
          ('C', 0.42642740173737281)],
         [('A', 0.0),
          ('G', 0.053607190685875404),
          ('C', 0.2054942309625224),
          ('T', 0.69689347891638032)],
         [('G', 0.0),
          ('A', 0.0),
          ('C', 0.31312908494534769),
          ('T', 0.84220926295645249)],
         [('G', 0.0),
          ('C', 0.068079835765814778),
          ('A', 0.068079835765814778),
          ('T', 1.3207488138568066)],
         [('G', 0.020257705570431345),
          ('A', 0.020257705570431345),
          ('C', 0.048618493369035232),
          ('T', 0.055371061892512348)],
         [('G', 0.0),
          ('A', 0.076286510680262556),
          ('C', 0.20538675952378382),
          ('T', 0.34622339462580698)]]


class MotifPlot:

    @classmethod
    def make_plot(cls, scoresByPosition):

        fig, ax = plt.subplots(figsize=(10, 3))

        all_scores = scoresByPosition
        x = 1
        maxi = 0
        for scores in all_scores:
            y = 0
            for base, score in scores:
                cls.letterAt(base, x, y, score, ax)
                y += score
            x += 1
            maxi = max(maxi, y)

        plt.xticks(range(1, x))
        plt.xlim((0, x))
        plt.ylim((0, maxi))
        plt.tight_layout()
        plt.show()

    @classmethod
    def letterAt(cls,letter, x, y, yscale=1, ax=None):

        text = LETTERS[letter]

        t = mpl.transforms.Affine2D().scale(1 * globscale, yscale * globscale) + \
            mpl.transforms.Affine2D().translate(x, y) + ax.transData
        p = PathPatch(text, lw=0, fc=COLOR_SCHEME[letter], transform=t)
        if ax != None:
            ax.add_artist(p)
        return p

if __name__ == '__main__':

    MotifPlot.make_plot(ALL_SCORES2)